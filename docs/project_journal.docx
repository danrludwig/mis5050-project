Project title: Dealership Website
Team name: MISter steal your girl
Team members: Dan Ludwig and Chase Anderson


Project Milestone 4
December 12, 2020

# Application Summary
Level Up Car Sales LLC., a small used car dealership in Ogden, Utah needs a functional
web form that will collect referral information for customers to be contacted by employees of
the dealership. As of right now they only have their phone number listed and an email for
customers to contact them. With this form they will be able to respond from multiple emails
within the company and thus respond faster to customers. There also will be a list of all the 
cars the inventory has and has had (each car will be listed as sold or not sold). A list of parts
being sold at the dealership will also be available. 
An admin can add vehicles and parts to the list of inventory (both parts and vehicles). There is
also an option for other users to create an account and sign in, that way they can create a referral.
The people who are going to use this web application are the owners of the dealership and the customers
of the dealership. 

# Routing Guide
router.get("/") - renders the homepage

router.get("/login") - renders a page to choose whether to login as an admin or customer
router.get("/login/admin") - renders the loginpage for admins
router.get("/login/customer") - renders the login page for customers 
router.post("/user/create") - creates a new user 
router.get("/user/login") - renders a login page for both admins and customers
router.post("/user/login") - logs in the user

router.get("/reviews") - renders a list of reviews
router.get("/reviews/new") - renders a page to where someone can create a new review
router.post("/reviews/create") - posts information from /reviews/new to the database
router.get("/reviews/:id/edit") - lets people edit a review
router.put("/reviews/:id/update") - updates the review
router.get("/reviews/:id") - shows one specific review
router.delete("/reviews/:id/delete") - deletes a selected review

router.get("/inventory") - renders an page where people can choose to look at either the vehicles inventory or the parts inventory
router.get("/inventory/vehicles") - renders a page that lists all the vehicles
router.get("/inventory/parts") - renders a page that lists all the parts
router.get("/inventory/new") - renders a page  where a user can add a new vehicle
router.get("/inventory/new-parts") - renders a pege where a user can add a new part
router.post("/inventory/create-vehicle") - add a vehicle to the database 
router.post("/inventory/create-part") - adds a part to the database 
router.delete("/inventory/parts/:id/delete") - deletes a part from the database 
router.delete("/inventory/vehicles/:id/delete") - deltes a vehicle from the database


# User Credentials and Roles
admin:
    Can add and remove items from inventory
    Can create referrals and reviews
guest:
    Can create reviews and reviews

Example user that you can use:
    email and username: admin@admin.com
    password: admin


# Project Requirements
Requirement                             | What we did 
---------------------------------------------------------------
5 intelinked dynamic pages that display | We have a home page, a page for user logins, pages to show all the different
 dynamic, database-driven content per   | database models we have, where it shows a list of them and how people can 
 team member.                           | add and remove them.
 --------------------------------------------------------------
 At least 5 database transactions per   | Can add and delete users, vehicles, parts, and reviews.
 team member                            |
 --------------------------------------------------------------
 Support for user authentication and    | Created a secure storage of user authentication,
 secure storage of user credentials     | storing that information in our database 
 --------------------------------------------------------------
 Preservation of state                  | We have it so it says logged in for 46 days
                                        |
---------------------------------------------------------------
Development of atleast one REST API and | I developed an api that shows the pictures of the vehicles in the database.
consumption of another third-party API  | The api we added shows a json format view of random cat facts.
---------------------------------------------------------------
Inclusion and use of atleast two npm    | We added in colors that allows the console to have different colors printed, everytime main.js runs it will print out examples of this
libraries that are not covered elsewhere| Our second library is called prettier. it is run using the command `npx prettier --check .` which then checks to see that all the code
in the course                           | matches and makes the code redable. using `npx prettier --write .` will go through and check and overwrite existing code to look better.
---------------------------------------------------------------



Project Milestone 3
November 11, 2020

Progress Since Last Milestone:
- Redesigned the database and set up the data models
- Created controls for the models, and made basic crud functionality
- Added some pretty great pictures
- Improved basic functionality of website

Problems Encountered/Questions:
- Need to work on login page


Project Milesstone 2
October 15, 2020

Progress Since Last Milestone:
- Decided on 10 dynamic pages the website will have (along with the homescreen).
- Designed entity relationship diagram for the mongoose database we will be using for this project.
- Started a github repository to share the files for this project and installed all the dependencies we anticipated using (which we can add more later if needed).
- Set up MVC architecutre for organizing the project.

Problems Encountered/Questions:
- Regarding the database, do we need a certain amount of relationships between the tables? We've only got one connecting so far. 
- 



Project Milestone 1
September 24, 2020

Project Summary:
Level Up Car Sales LLC., a small used car dealership in Ogden, Utah needs a functional
web form that will collect referral information for customers to be contacted by employees of
the dealership. As of right now they only have their phone number listed and an email for
customers to contact them. With this form they will be able to respond from multiple emails
within the company and thus respond faster to customers.
The form will collect the information and send it to a database that will record the
information and make it accessible to the dealership. The customer already has a basic website
set up and there may need to be adjustments made in order to accommodate the form. We will
also look into form services as well.
Description:
The deliverable for this project will be a functioning form on their website that will
collect information for referrals and send them to a database that is accessible to the client.
The user will enter information into the form such as name, address, phone number, email
address, etc. Upon the user hitting submit and accepting terms of being contacted by the
dealership, the information will be sent to a database that will be accessible to employees of
the dealership so they can contact the customer.